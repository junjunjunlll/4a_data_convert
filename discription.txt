总体功能描述
这是一个基于 Python 的桌面应用工具，旨在提供一系列高效的数据处理和文件操作功能，旨在简化繁琐的、重复性的数据整理任务。该工具采用图形用户界面（GUI），使得非编程用户也能轻松使用。工具的模块化设计和清晰的组件使用，使其易于后续功能扩展。

具体功能分点描述
数据筛选与分页（已完成）

核心功能: 根据一个筛选条件文件中的数据，对指定的源文件进行筛选。

输入模式: 支持对单个文件或对指定目录下所有文件进行筛选。

分页输出: 在目录模式下，会先将所有筛选出的数据以 pandas.DataFrame 结构进行累积，当数据量达到设定值时，按页输出到新的 .xlsx 文件中。

用户配置:

数据来源: 使用 QFileDialog 组件选择文件或目录。

表头行数: 使用 QComboBox 组件供用户选择。

筛选列名: 使用 QComboBox 动态加载读取到的列名。

分页大小: 使用 QLineEdit 组件，并配合 QIntValidator 验证输入合法性。

匹配模式: 使用 QComboBox 提供“精确匹配”和“模糊匹配”选项。

实时日志: 界面底部使用 QTextEdit 组件，通过重定向 sys.stdout，实时显示处理进度、文件信息和总计数据。

数据合并（待开发）

核心功能: 能够将多个结构相同或相似的数据文件合并成一个 pandas.DataFrame。

输入模式: 支持选择单个文件或整个目录进行合并。

去重选项: 核心逻辑将调用 pandas.DataFrame.drop_duplicates() 方法实现。

输出格式: 合并后的数据可以保存为新的Excel或CSV文件。

格式转换（待开发）

核心功能: 能够将文件从一种格式（.xls、.xlsx）转换为另一种格式（.csv）。

数据结构: 转换过程将通过 pandas.read_excel() 和 pandas.DataFrame.to_csv() 方法实现。

批量处理: 支持批量转换一个目录下的所有文件。

编码选择: 在转换为文本文件时，用户可以选择输出文件的编码格式（如 utf-8、gbk）。

数据清洗（待开发）

核心功能: 提供一系列数据清洗功能，如移除空行、处理缺失值、去除重复项等。

数据结构: 所有操作都将在 pandas.DataFrame 上进行，利用其强大的清洗方法。

自定义规则: 用户可以通过简单的UI交互设置清洗规则，例如将某列的特定值替换为新值（pandas.DataFrame.replace()）。

可视化反馈: 可以在执行操作前，使用 pandas.DataFrame.head() 方法提供数据预览。

核心技术与架构

UI 框架: 基于 PyQt6 构建，提供直观友好的图形界面。

数据引擎: 使用 pandas 和 NumPy 作为核心数据处理引擎，确保高效处理大型文件。

模块化设计: 每个功能（筛选、合并、清洗等）都将作为独立的模块（如 data_filter_tab.py），通过主窗口（main_windows.py）进行集成。

打包与分发: 使用 PyInstaller 将整个项目打包成独立的 .exe 可执行文件。特别处理了打包后的路径问题，利用 sys.executable 和 sys.frozen 变量确保输出目录始终在 .exe 文件所在的同级目录下。